protocol {
    registry: "telchar.sh",
    scope: "txpipe",
    name: "asteria",
}

env {
    ship_name: Bytes,
    spacetime_validator_ref: UtxoRef,
}

use cardano::cip57("asteria.cip57") {
    SpaceTimeValidator,
}

policy SpaceTime {
    script: SpaceTimeValidator {
        max_ship_fuel: env.max_ship_fuel,
    },
}

policy SpaceTime {
    hash: 0xABCDEF12344,
    ref: env.spacetime_ref,
};

party Pilot;

state Ship {
    from: SpaceTime,
    datum_is: ShipDatum,
    beacon: asset(SpaceTime, env.ship_name, 1),
}

tx move(
    ship_name: Bytes,
    pilot_name: Bytes,
    delta_x: Int,
    delta_y: Int,
) {
    input prev_ship {
        state: Ship,
        redeemer: ShipRedeemer::MoveShip {
            delta_x,
            delta_y,
        }
    }

    input pilot_token {
        from: Pilot,
        datum_is: asset(SpaceTime, pilot_name, 1),
        min_amount: Pilot(1) + fees
    }

    collateral {
        from: Pilot
    }

    output new_ship {
        state: Ship,
        datum: ShipDatum {
            pos_x: prev_ship.pos_x + delta_x,
            pos_y: prev_ship.pos_y + delta_y,
            ...ship
        }
    }

    output change {
        to: Pilot,
        amount: pilot_token - fees
    }
}
